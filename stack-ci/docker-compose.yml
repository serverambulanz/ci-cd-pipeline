# CI/CD Stack - Gitea + Woodpecker
# Deploy via Portainer oder: docker compose up -d

services:
  # ============================================
  # Gitea - Self-hosted Git Service
  # ============================================
  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    restart: unless-stopped
    ports:
      # SSH bleibt exponiert (kein HTTP, kann nicht über Traefik)
      - "2222:22"
      # HTTP Port 3000 wird NICHT mehr exponiert → nur über Traefik!
    volumes:
      - gitea_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - USER_UID=1000
      - USER_GID=1000
      # ROOT_URL angepasst für Traefik Domain
      - GITEA__server__ROOT_URL=http://git.devops.local
      - GITEA__server__DOMAIN=git.devops.local
      - GITEA__server__HTTP_PORT=3000
    networks:
      - devops-network
      - ci-internal
    labels:
      # ==================
      # Traefik Integration
      # ==================
      - "traefik.enable=true"

      # HTTP Router
      - "traefik.http.routers.gitea.rule=Host(`git.devops.local`)"
      - "traefik.http.routers.gitea.entrypoints=web"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"

      # Docker Network für Traefik
      - "traefik.docker.network=devops-network"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # Woodpecker CI - Server
  # ============================================
  woodpecker-server:
    image: woodpeckerci/woodpecker-server:latest
    container_name: woodpecker-server
    restart: unless-stopped
    depends_on:
      gitea:
        condition: service_healthy
    ports:
      # gRPC Port für Agent Kommunikation (MUSS exponiert bleiben, interner Protokoll)
      - "9000:9000"
      # HTTP Port 8000 wird NICHT mehr exponiert → nur über Traefik!
    volumes:
      - woodpecker_data:/var/lib/woodpecker
    extra_hosts:
      # Ermöglicht Container-interne Auflösung von git.devops.local über Traefik
      - "git.devops.local:172.20.0.6"
    environment:
      # Server Settings
      - WOODPECKER_OPEN=true
      # HOST URL angepasst für Traefik Domain
      - WOODPECKER_HOST=http://ci.devops.local
      - WOODPECKER_ADMIN=admin
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}

      # Gitea Integration (via Traefik für OAuth-Kompatibilität)
      - WOODPECKER_GITEA=true
      - WOODPECKER_GITEA_URL=http://git.devops.local
      - WOODPECKER_GITEA_CLIENT=${GITEA_OAUTH_CLIENT_ID}
      - WOODPECKER_GITEA_SECRET=${GITEA_OAUTH_CLIENT_SECRET}

      - WOODPECKER_LOG_LEVEL=info
    networks:
      - devops-network
      - ci-internal
    labels:
      # ==================
      # Traefik Integration
      # ==================
      - "traefik.enable=true"

      # HTTP Router für Web UI
      - "traefik.http.routers.woodpecker.rule=Host(`ci.devops.local`)"
      - "traefik.http.routers.woodpecker.entrypoints=web"
      - "traefik.http.services.woodpecker.loadbalancer.server.port=8000"

      # Docker Network für Traefik
      - "traefik.docker.network=devops-network"

  # ============================================
  # Woodpecker CI - Agent
  # ============================================
  woodpecker-agent:
    image: woodpeckerci/woodpecker-agent:latest
    container_name: woodpecker-agent
    restart: unless-stopped
    depends_on:
      - woodpecker-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - cargo_cache:/root/.cargo
      - rustup_cache:/root/.rustup
    environment:
      - WOODPECKER_SERVER=woodpecker-server:9000
      - WOODPECKER_AGENT_SECRET=${WOODPECKER_AGENT_SECRET}
      - WOODPECKER_MAX_WORKFLOWS=4
      - WOODPECKER_LOG_LEVEL=info
      - CARGO_HOME=/root/.cargo
      - RUSTUP_HOME=/root/.rustup
      
      # Backend für nested Docker
      - WOODPECKER_BACKEND=docker
      - WOODPECKER_BACKEND_DOCKER_NETWORK=devops-network
    networks:
      - devops-network
      - ci-internal

volumes:
  gitea_data:
    
  
  woodpecker_data:
    
  
  cargo_cache:
    
  
  rustup_cache:
    

networks:
  devops-network:
    external: true
  ci-internal:
    driver: bridge
